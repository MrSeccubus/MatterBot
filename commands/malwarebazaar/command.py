#!/usr/bin/env python3

import httpx
import json
import re
from pathlib import Path
try:
    from commands.malwarebazaar import defaults as settings
except ModuleNotFoundError: # local test run
    import defaults as settings
    if Path('settings.py').is_file():
        import settings
else:
    if Path('commands/malwarebazaar/settings.py').is_file():
        try:
            from commands.malwarebazaar import settings
        except ModuleNotFoundError: # local test run
            import settings

async def process(command, channel, username, params):
    if len(params)>0:
        params = params[0].replace('[.]','.')
        headers = {
            'Content-Type': settings.CONTENTTYPE,
        }
        message = 'MalwareBazaar search for `%s`:\n' % (params,)
        try:
            hash_algo = None
            if re.search(r"^[A-Za-z0-9]{32}$", params):
                hash_algo = 'md5_hash'
            elif re.search(r"^[A-Za-z0-9]{40}$", params):
                hash_algo = 'sha1_hash'
            elif re.search(r"^[A-Za-z0-9]{64}$", params):
                hash_algo = 'sha256_hash'
            if hash_algo:
                data = {
                    'query': 'get_info',
                    'hash': params,
                }
                async with httpx.AsyncClient() as session:
                    response = await session.post(settings.APIURL['malwarebazaar']['url'], data=data)
                    json_response = response.json()
                    if json_response['query_status'] == 'ok':
                        if 'data' in json_response:
                            data = json_response['data']
                            for sample in data:
                                sha256_hash = sample['sha256_hash']
                                threat = sample['signature']
                                if 'tags' in sample:
                                    message += '- Threat: `%s`' % (threat,)
                                    tags = sample['tags']
                                if 'file_name' in sample:
                                    file_name = sample['file_name']
                                    message += ' | Filename: `%s`' % (file_name,)
                                if tags:
                                    message += ' | Tags: `' + '`, `'.join(tags) + '`'
                                malwarebazaar_reference = 'https://bazaar.abuse.ch/sample/%s' % (sha256_hash,)
                                message += ' | Reference: [MalwareBazaar sample](%s)' % (malwarebazaar_reference,)
                                message += '\n'
                            if len(data)>0:
                                return {'messages': [
                                    {'text': message.strip()},
                                ]}
                    else:
                        return {'messages': [
                            {'text': 'MalwareBazaar search for `%s` returned no results.' % (params,)}
                        ]}
        except Exception as e:
            return {'messages': [
                {'text': 'An error occurred searching MalwareBazaar for `%s`:\nError: `%s`' % (params, e.message)},
            ]}
